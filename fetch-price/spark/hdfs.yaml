apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hdfs-namenode-pvc
  namespace: hdfs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: hdfs-datanode-pv-1
#   namespace: hdfs
# spec:
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: /mnt/data/hdfs-datanode-1
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: hdfs-datanode-pvc-1
#   namespace: hdfs
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: hdfs-datanode-pv-2
#   namespace: hdfs
# spec:
#   capacity:
#     storage: 10Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: /mnt/data/hdfs-datanode-2
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: hdfs-datanode-pvc-2
#   namespace: hdfs
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hdfs-namenode
  namespace: hdfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hdfs-namenode
  template:
    metadata:
      labels:
        app: hdfs-namenode
    spec:
      containers:
        - name: namenode
          image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9870
            - containerPort: 8020
          envFrom:
            - configMapRef:
                name: hdfs-config
          env:
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: hdfs-config
                  key: CLUSTER_NAME
          volumeMounts:
            - mountPath: /hadoop/dfs/name
              name: hdfs-namenode-data
      volumes:
        - name: hdfs-namenode-data
          persistentVolumeClaim:
            claimName: hdfs-namenode-pvc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-datanode
  namespace: hdfs
spec:
  serviceName: hdfs-datanode
  replicas: 2
  selector:
    matchLabels:
      app: hdfs-datanode
  template:
    metadata:
      labels:
        app: hdfs-datanode
    spec:
      containers:
        - name: datanode
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9864
          envFrom:
            - configMapRef:
                name: hdfs-config
          volumeMounts:
            - mountPath: /hadoop/dfs/data
              name: hdfs-datanode-data
  volumeClaimTemplates:
    - metadata:
        name: hdfs-datanode-data
      spec:
        accessModes: 
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hdfs-config
  namespace: hdfs
data:
  CLUSTER_NAME: "hdfs-cluster"
  CORE_CONF_fs_defaultFS: "hdfs://hdfs-namenode:8020"
  HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check: "false"
  HDFS_CONF_dfs_permissions_enabled: "false"
  HDFS_CONF_dfs_webhdfs_enabled: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-namenode
  namespace: hdfs
spec:
  selector:
    app: hdfs-namenode
  ports:
    - port: 8020
      targetPort: 8020
      name: namenode-rpc
    - port: 9870
      targetPort: 9870
      name: namenode-http
---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-datanode
  namespace: hdfs
spec:
  clusterIP: None
  selector:
    app: hdfs-datanode
  ports:
    - port: 9864
      targetPort: 9864