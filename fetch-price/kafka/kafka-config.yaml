# Kafka Broker 1 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
 name: kafka-broker1
spec:
 replicas: 1
 selector:
   matchLabels:
     app: kafka-broker1
 template:
   metadata:
     labels:
       app: kafka-broker1
   spec:
     containers:
     - name: kafka
       image: wurstmeister/kafka
       ports:
       - containerPort: 9092
       - containerPort: 9093
       env:
       - name: KAFKA_BROKER_ID
         value: "1"
       - name: KAFKA_ZOOKEEPER_CONNECT
         value: zookeeper.default.svc.cluster.local:2181
       - name: KAFKA_LISTENERS
         value: PLAINTEXT://:9092,INTERNAL://:9093
       - name: KAFKA_ADVERTISED_LISTENERS
         value: PLAINTEXT://kafka-broker1:9092,INTERNAL://kafka-broker1:9093
       - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
         value: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
       - name: KAFKA_INTER_BROKER_LISTENER_NAME
         value: INTERNAL
       - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
         value: "true"
       - name: KAFKA_DELETE_TOPIC_ENABLE
         value: "true"
       - name: KAFKA_DEFAULT_REPLICATION_FACTOR
         value: "1"
       resources:
         requests:
           memory: "128Mi"
           cpu: "100m"
         limits:
           memory: "256Mi"
           cpu: "200m"
---
# Kafka Broker 2 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
 name: kafka-broker2
spec:
 replicas: 1
 selector:
   matchLabels:
     app: kafka-broker2
 template:
   metadata:
     labels:
       app: kafka-broker2
   spec:
     containers:
     - name: kafka
       image: wurstmeister/kafka
       ports:
       - containerPort: 9092
       - containerPort: 9093
       env:
       - name: KAFKA_BROKER_ID
         value: "2"
       - name: KAFKA_ZOOKEEPER_CONNECT
         value: zookeeper.default.svc.cluster.local:2181
       - name: KAFKA_LISTENERS
         value: PLAINTEXT://:9092,INTERNAL://:9093
       - name: KAFKA_ADVERTISED_LISTENERS
         value: PLAINTEXT://kafka-broker2:9092,INTERNAL://kafka-broker2:9093
       - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
         value: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
       - name: KAFKA_INTER_BROKER_LISTENER_NAME
         value: INTERNAL
       - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
         value: "true"
       - name: KAFKA_DELETE_TOPIC_ENABLE
         value: "true"
       - name: KAFKA_DEFAULT_REPLICATION_FACTOR
         value: "1"
       resources:
         requests:
           memory: "128Mi"
           cpu: "100m"
         limits:
           memory: "256Mi"
           cpu: "200m"
---
# Zookeeper Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
 name: zookeeper
spec:
 replicas: 1
 selector:
   matchLabels:
     app: zookeeper
 template:
   metadata:
     labels:
       app: zookeeper
   spec:
     containers:
     - name: zookeeper
       image: wurstmeister/zookeeper
       ports:
       - containerPort: 2181
       env:
       - name: ZOOKEEPER_CLIENT_PORT
         value: "2181"
       resources:
         requests:
           memory: "128Mi"
           cpu: "100m"
         limits:
           memory: "256Mi"
           cpu: "200m"
---
# Kafka Broker 1 Service
apiVersion: v1
kind: Service
metadata:
 name: kafka-broker1
spec:
 selector:
   app: kafka-broker1
 ports:
 - name: external
   port: 9092
   targetPort: 9092
 - name: internal
   port: 9093
   targetPort: 9093
---
# Kafka Broker 2 Service 
apiVersion: v1
kind: Service
metadata:
 name: kafka-broker2
spec:
 selector:
   app: kafka-broker2
 ports:
 - name: external
   port: 9092
   targetPort: 9092
 - name: internal
   port: 9093
   targetPort: 9093
---
# Zookeeper Service
apiVersion: v1
kind: Service
metadata:
 name: zookeeper
spec:
 selector:
   app: zookeeper
 ports:
 - port: 2181
   targetPort: 2181
---
# Producer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
 name: producer
spec:
 replicas: 1
 selector:
   matchLabels:
     app: producer
 template:
   metadata:
     labels:
       app: producer
   spec:
     containers:
     - name: producer
       image: ducchankawaii/producer:latest
       imagePullPolicy: IfNotPresent
       env:
       - name: KAFKA_BOOTSTRAP_SERVERS
         value: kafka-broker1:9092,kafka-broker2:9092
       resources:
         requests:
           memory: "128Mi"
           cpu: "100m"
         limits:
           memory: "256Mi"
           cpu: "200m"
---
# Consumer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
 name: consumer
spec:
 replicas: 1
 selector:
   matchLabels:
     app: consumer
 template:
   metadata:
     labels:
       app: consumer
   spec:
     containers:
     - name: consumer
       image: ducchankawaii/consumer:latest
       imagePullPolicy: IfNotPresent
       env:
       - name: KAFKA_BOOTSTRAP_SERVERS
         value: kafka-broker1:9092,kafka-broker2:9092
       resources:
         requests:
           memory: "128Mi"
           cpu: "100m"
         limits:
           memory: "256Mi"
           cpu: "200m"
---
apiVersion: v1
kind: Pod
metadata:
 name: create-topic
spec:
 containers:
 - name: create-topic
   image: wurstmeister/kafka
   command:
   - "sh"
   - "-c"
   - |
     kafka-topics.sh --create \
       --zookeeper zookeeper.default.svc.cluster.local:2181 \
       --replication-factor 1 \
       --partitions 1 \
       --topic token && \
     kafka-topics.sh --create \
       --zookeeper zookeeper.default.svc.cluster.local:2181 \
       --replication-factor 1 \
       --partitions 1 \
       --topic tx
   resources:
     requests:
       memory: "56Mi"
       cpu: "100m"
     limits:
       memory: "128Mi"
       cpu: "200m"